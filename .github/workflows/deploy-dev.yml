name: Deploy to Dev
# Run the workflow whenever change is pushed into the main branch
on:
  push:
    branches:
      - feature1
      - feature2
  workflow_dispatch:

# Optional: environment variables can be injected here
# You can add these variables in your repository Settings - Secrets and variables - Actions - variables
# env:

# There are two jobs in this workflow - build and deploy
jobs:
 # Builds the application for production. 
 # You should configure this environment as close as possible to the production environment, e.g. using Ubuntu for Linux apps, using the same Node version
  build:
    runs-on: ubuntu-latest
    if: github.event.inputs.branch != 'main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies, build, and test
        run: |
          npm install
          npm run build --if-present
         # Other scripts if configured should be added here, such as linting, formating

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: dist # This should be your distribution path, not the root path
 
 # Deploy the application to Azure
  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'DevTest'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app
      - name: 'Deploy to Azure Web App(dev)'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
            app-name: test-pipeline-dev
            # slot-name: 'Production'
            publish-profile: ${{ secrets.AZUREAPPSERVICE_DEV_PUBLISHPROFILE }} # Publish profile should always be stored as secrets in your repository Settings - Secrets and variables - Actions - secrets
            package: .